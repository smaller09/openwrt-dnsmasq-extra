#!/bin/sh /etc/rc.common
# Copyright (C) 2018 chenhw2 <https://github.com/chenhw2>

START=69
EXTRA_COMMANDS="rules update"

NAME=Dnsmasq-Extra

uci_get_by_type() {
	local ret=$(uci get $1.@$2[0].$3 2>/dev/null)
	echo ${ret:=$4}
}

uci_bool_by_type() {
	case "$(uci_get_by_type $1 $2 $3)" in
		1|on|true|yes|enabled) return 0;;
	esac
	return 1
}

SSDNS="127.0.0.1#$( uci_get_by_type shadowsocks   port_forward  local_port  5300)"
SSRDNS="127.0.0.1#$(uci_get_by_type shadowsocksr  port_forward  local_port  5300)"
CHDNS="127.0.0.1#$(uci_get_by_type  chinadns      chinadns      port        7300)"
DNSCPT="127.0.0.1#$(uci_get_by_type dnscrypt      dnscrypt      port        7400)"
BLOCK=0.0.0.0
DNSMASQDIR=/var/dnsmasq.d
IPSETDIR=/etc/dnsmasq-extra.d

start() {
	echo -n "Geneareting : $NAME "
	mkdir -p $DNSMASQDIR

	[ -x /usr/bin/chinadns ] &&
		echo -n "CHDNS, " && {
			sed "s/^/server=\//;s/$/\/${CHDNS}/" $IPSETDIR/gfwlist $IPSETDIR/tldn > $DNSMASQDIR/chdns.conf
			head -n 20 /etc/init.d/shadowsocks* 2>/dev/null | sed -n 's/^WATCHDOG_ENDPOINT=//p' | tr -d "'" | sort -u |
				sed "s/^/server=\//;s/$/\/${CHDNS}/" >> $DNSMASQDIR/chdns.conf
		}

	[ -x /usr/bin/dnscrypt ] &&
		echo -n "DNSCPT, " && {
			sed "s/^/server=\//;s/$/\/${DNSCPT}/" $IPSETDIR/gfwlist $IPSETDIR/tldn > $DNSMASQDIR/dnscpt.conf
			head -n 20 /etc/init.d/shadowsocks* 2>/dev/null | sed -n 's/^WATCHDOG_ENDPOINT=//p' | tr -d "'" | sort -u |
				sed "s/^/server=\//;s/$/\/${DNSCPT}/" >> $DNSMASQDIR/dnscpt.conf
		}

	[ -x /usr/bin/ss-tunnel ] &&  [ "Z$(uci_get_by_type shadowsocks  port_forward server)" != 'Znil' ] &&
		echo -n "SSDNS, " && ( sed "s/^/server=\//;s/$/\/${SSDNS}/" $IPSETDIR/gfwlist $IPSETDIR/tldn > $DNSMASQDIR/ssdns.conf )

	[ -x /usr/bin/ssr-tunnel ] && [ "Z$(uci_get_by_type shadowsocksr port_forward server)" != 'Znil' ] &&
		echo -n "SSRDNS, " && ( sed "s/^/server=\//;s/$/\/${SSRDNS}/" $IPSETDIR/gfwlist $IPSETDIR/tldn > $DNSMASQDIR/ssrdns.conf )

	[ 0 -lt $(sed -n '/wan_bp_list/p' /etc/config/shadowsocks* 2>/dev/null | grep -c 'chnroute') ] &&
		echo -n "IPSET:ss(r)_bp for chnroute, " && {
			( sed "s/^/ipset=\//;s/$/\/ss_spec_dst_bp/"  $IPSETDIR/direct >  $DNSMASQDIR/direct.conf )
			( sed "s/^/ipset=\//;s/$/\/ssr_spec_dst_bp/" $IPSETDIR/direct >> $DNSMASQDIR/direct.conf )
			echo 'ipset=/cloudflare-dns.com/ss_spec_dst_sp'  >> $DNSMASQDIR/direct.conf
			echo 'ipset=/cloudflare-dns.com/ssr_spec_dst_sp' >> $DNSMASQDIR/direct.conf
		}

	if [ 0 -lt $(sed -n '/wan_bp_list/p' /etc/config/shadowsocks* 2>/dev/null | grep -c 'flag_gfwlist') ]; then
		echo -n "IPSET:gfwlist, " && ( sed "s/^/ipset=\//;s/$/\/gfwlist/" $IPSETDIR/gfwlist > $DNSMASQDIR/gfwlist.conf )

		ipset -X gfwlist 2>/dev/null
		ipset -! -R <<-EOF 2>/dev/null
			create gfwlist hash:net hashsize 64
			flush gfwlist
			add gfwlist 1.0.0.1
			add gfwlist 8.8.4.4
			add gfwlist 168.95.1.1
			add gfwlist 202.14.67.4
			add gfwlist 208.67.220.220
			add gfwlist 208.67.222.222
			add gfwlist 91.108.4.0/22
			add gfwlist 91.108.16.0/22
			add gfwlist 91.108.56.0/22
			add gfwlist 109.239.140.0/24
			add gfwlist 108.168.174.0/27
			add gfwlist 149.154.160.0/22
			add gfwlist 149.154.164.0/22
			add gfwlist 149.154.168.0/22
			add gfwlist 149.154.172.0/22
			add gfwlist 158.85.224.160/27
			add gfwlist 158.85.46.128/27
			add gfwlist 158.85.5.192/27
			add gfwlist 173.192.222.160/27
			add gfwlist 173.192.231.32/27
			add gfwlist 174.37.243.64/27
			add gfwlist 184.173.147.32/27
			add gfwlist 208.43.122.128/27
			add gfwlist 109.239.140.0/24
			add gfwlist 50.22.198.204/30
			$(head -n 50 $IPSETDIR/gfwlist | sed -nr 's/([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\nadd gfwlist \1/;s/^.*\n//p')
EOF
	fi

	echo -n "ABDLOCK, " && ( sed "s/^/address=\//;s/$/\/${BLOCK}/" $IPSETDIR/adblock > $DNSMASQDIR/adblock.conf )
	echo -n "CUSTOM" && ( echo "conf-file=$IPSETDIR/custom.conf" > $DNSMASQDIR/custom.conf )

	echo "all-servers" > $DNSMASQDIR/alls.conf

	sed '/\/\//d; /[0-9]\/[0-9]/d' -i $DNSMASQDIR/*

	( /etc/init.d/dnsmasq restart >/dev/null 2>&1 ) && rules
	echo " ."
}

clean_dir() {
	ipset -F gfwlist   2>/dev/null
	ipset -X gfwlist   2>/dev/null

	echo -n "Stopping $NAME"
	rm -rf $DNSMASQDIR/chdns.conf     2>/dev/null
	rm -rf $DNSMASQDIR/dnscpt.conf    2>/dev/null
	rm -rf $DNSMASQDIR/ssdns.conf     2>/dev/null
	rm -rf $DNSMASQDIR/ssrdns.conf    2>/dev/null
	rm -rf $DNSMASQDIR/adblock.conf   2>/dev/null
	rm -rf $DNSMASQDIR/gfwlist.conf   2>/dev/null
	rm -rf $DNSMASQDIR/direct.conf    2>/dev/null
	rm -rf $DNSMASQDIR/custom.conf    2>/dev/null
	rm -rf $DNSMASQDIR/alls.conf      2>/dev/null
	echo " ."
}

stop() {
	clean_dir
	/etc/init.d/dnsmasq restart >/dev/null 2>&1
	rules
	echo " ."
}

restart() {
	echo "Restarting $NAME... "
	clean_dir
	sleep 1
	start
}

update(){
	update_sub 'gfwlist'
	update_sub 'direct'
	update_chn
}

update_sub(){
	sub=$1
	file="/etc/dnsmasq-extra.d/${sub}"
	src="https://raw.githubusercontent.com/chenhw2/openwrt-dnsmasq-extra/master/dnsmasq-extra/files/data/${sub}"

	oldHash=$(md5sum ${file} 2>/dev/null | sed 's/ .*//g')
	newHash=$(curl --connect-timeout 5 --max-time 20 -ksSL ${src}.md5sum | sed 's/ .*//g')

	# echo $oldHash $newHash
	[ "Z$oldHash" == "Z" -o "Z$newHash" == "Z" ] && return 1
	[ "$oldHash" == "$newHash" ] && echo "# $file NOT Needed Updated" && return 0

	bak="/tmp/${sub}.backup"
	cp -f "${file}" "${bak}"
	curl --connect-timeout 10 --max-time 60 -ksSL ${src} -o ${file}
	oldHash=$(md5sum "${file}" | sed 's/ .*//g')
	[ "Z$oldHash" == "Z$newHash" ] && {
		echo "# ${file} Updated"
		rm -f "${bak}"
		return 0
	}

	echo "# $file is broken, failsafe Now!"
	rm -f "${file}"
	cp -f "${bak}" "${file}" || cp -f "/rom${file}" "${file}"
}

update_chn(){
	chnroute=/etc/dnsmasq-extra.d/chnroute.txt
	[ "Z$chnroute" != "Z" ] || return 0

	chnsrc='https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt'

	echo "# $chnroute Updating"
	curl --connect-timeout 10 --max-time 120 -ksSL $chnsrc -o $chnroute
	if [ $? -eq 0 ]; then
		echo "# $chnroute Updated"
	else
		echo "# $chnroute NOT Updated"
	fi

	if [ ! -f "$chnroute" ] || [ $(ls -l "$chnroute" | awk '{print $5}') -lt 4096 ]; then
		echo "# $chnroute is broken, failsafe Now!"
		rm -f "$chnroute"
		cp -f "/rom$chnroute" "$chnroute"
	fi
}

rules(){
	while iptables -t nat -D PREROUTING -p udp --dport 53 -j REDIRECT --to 53 2>/dev/null; do :; done
	while iptables -t mangle -D PREROUTING -p udp --dport 53 -j RETURN 2>/dev/null; do :; done

	[ -f $DNSMASQDIR/custom.conf ] || exit 0

	iptables -t nat -I PREROUTING -p udp --dport 53 -j REDIRECT --to 53
	iptables -t mangle -I PREROUTING -p udp --dport 53 -j RETURN
}
